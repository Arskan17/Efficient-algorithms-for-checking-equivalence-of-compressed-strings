# Replace with your grammar. Every key is a nonterminal and its value is a list of symbols, which are either terminals or nonterminals.

# G = {"X": ["Y","Z"], "Y": ["Z","Z"], "Z": ["a","b"],
#          "T": ["U","b"], "U": ["a","V"], "V": ["W","W"], "W": ["b","a"]}
# S = {("X","T")}

# G = {
#         "X": ["Y", "Z"],        "Y": ["A", "B"],        "Z": ["C", "D"],        "A": ["a", "b"],        "B": ["a", "b"],        "C": ["a", "b"],        "D": ["a", "b"],
#         "T": ["U", "V"],        "U": ["E", "F"],        "V": ["G", "H"],        "E": ["a", "b"],        "F": ["a", "b"],        "G": ["a", "b"],        "H": ["a", "b"]
#     }
# S = {("X", "T")}

# G = {
#     "A": ["B", "D"],    "B": ["E", "F"],    "D": ["b", "b"],    "E": ["a", "a"],    "F": ["C", "C"],    "C": ["b", "a"],
#     "X": ["Y", "Z"],    "Y": ["a", "R"],    "Z": ["R", "S"],    "R": ["a", "b"],    "S": ["R", "b"]
#     }
# S = {("A", "X")}

# G = {
#     'F3': ['a', 'b'], 'F4': ['F3', 'a'], 'F5': ['F4', 'F3'],
#     'H3': ['a', 'b'], 'H4': ['H3', 'a'], 'HC_5': ['H4', 'H3'], 'H5': ['HC_5', '']
# }
# S = {('F5', 'H5')}

# Fib 22
# G = { 
#     'F3': ['a', 'b'], 'F4': ['F3', 'a'], 'F5': ['F4', 'F3'], 'F6': ['F5', 'F4'], 'F7': ['F6', 'F5'], 'F8': ['F7', 'F6'], 'F9': ['F8', 'F7'], 'F10': ['F9', 'F8'], 'F11': ['F10', 'F9'], 'F12': ['F11', 'F10'], 'F13': ['F12', 'F11'], 'F14': ['F13', 'F12'], 'F15': ['F14', 'F13'], 'F16': ['F15', 'F14'], 'F17': ['F16', 'F15'], 'F18': ['F17', 'F16'], 'F19': ['F18', 'F17'], 'F20': ['F19', 'F18'], 'F21': ['F20', 'F19'], 'F22': ['F21', 'F20'],
#     'H3': ['a', 'b'], 'H4': ['H3', 'b'], 'H5': ['H4', 'H3'], 'H6': ['H5', 'H4'], 'H7': ['H6', 'H5'], 'H8': ['H7', 'H6'], 'H9': ['H8', 'H7'], 'H10': ['H9', 'H8'], 'H11': ['H10', 'H9'], 'H12': ['H11', 'H10'], 'H13': ['H12', 'H11'], 'H14': ['H13', 'H12'], 'H15': ['H14', 'H13'], 'H16': ['H15', 'H14'], 'H17': ['H16', 'H15'], 'H18': ['H17', 'H16'], 'H19': ['H18', 'H17'], 'H20': ['H19', 'H18'], 'H21': ['H20', 'H19'], 'H22': ['H21', 'H20']
# }
# S = {('F22', 'H22')}

#Fib 40
# G = {
#     "F3": ["a", "b"], "F4": ["F3", "a"], "F5": ["F4", "F3"], "F6": ["F5", "F4"], "F7": ["F6", "F5"], "F8": ["F7", "F6"], "F9": ["F8", "F7"], "F10": ["F9", "F8"], "F11": ["F10", "F9"], "F12": ["F11", "F10"], "F13": ["F12", "F11"], "F14": ["F13", "F12"], "F15": ["F14", "F13"], "F16": ["F15", "F14"], "F17": ["F16", "F15"], "F18": ["F17", "F16"], "F19": ["F18", "F17"], "F20": ["F19", "F18"], "F21": ["F20", "F19"], "F22": ["F21", "F20"], "F23": ["F22", "F21"], "F24": ["F23", "F22"], "F25": ["F24", "F23"], "F26": ["F25", "F24"], "F27": ["F26", "F25"], "F28": ["F27", "F26"], "F29": ["F28", "F27"], "F30": ["F29", "F28"], "F31": ["F30", "F29"], "F32": ["F31", "F30"], "F33": ["F32", "F31"], "F34": ["F33", "F32"], "F35": ["F34", "F33"], "F36": ["F35", "F34"], "F37": ["F36", "F35"], "F38": ["F37", "F36"], "F39": ["F38", "F37"], "F40": ["F39", "F38"],
#     "H3": ["a", "b"], "H4": ["H3", "a"], "H5": ["H4", "H3"], "H6": ["H5", "H4"], "H7": ["H6", "H5"], "H8": ["H7", "H6"], "H9": ["H8", "H7"], "H10": ["H9", "H8"], "H11": ["H10", "H9"], "H12": ["H11", "H10"], "H13": ["H12", "H11"], "H14": ["H13", "H12"], "H15": ["H14", "H13"], "H16": ["H15", "H14"], "H17": ["H16", "H15"], "H18": ["H17", "H16"], "H19": ["H18", "H17"], "H20": ["H19", "H18"], "H21": ["H20", "H19"], "H22": ["H21", "H20"], "H23": ["H22", "H21"], "H24": ["H23", "H22"], "H25": ["H24", "H23"], "H26": ["H25", "H24"], "H27": ["H26", "H25"], "H28": ["H27", "H26"], "H29": ["H28", "H27"], "H30": ["H29", "H28"], "H31": ["H30", "H29"], "H32": ["H31", "H30"], "H33": ["H32", "H31"], "H34": ["H33", "H32"], "H35": ["H34", "H33"], "H36": ["H35", "H34"], "H37": ["H36", "H35"], "H38": ["H37", "H36"], "H39": ["H38", "H37"], "H40": ["H39", "H38"]
# }
# S = {('F40', 'H40')}

import json

# Load G1.json and G2.json
with open("testing_dataset/random_strings_SLP/test_string_re-pair_size605264_F.json", "r") as g1_file:
    G1 = json.load(g1_file)

with open("testing_dataset/random_strings_SLP/test_string_re-pair_size605264_H.json", "r") as g2_file:
    G2 = json.load(g2_file)

G = {**G1, **G2}  # Merge the two grammars
S = {(list(G1.keys())[-1], list(G2.keys())[-1])}  # Use the last keys from both grammars as the start symbol
# print("Merged Grammar:", G)
# print("Start Symbols:", S)